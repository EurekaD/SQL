/*
视图（View）是一种虚拟的表，它是基于 SQL 查询语句的结果集构建的，可以像表一样查询。
视图不存储实际的数据，而是根据查询定义的逻辑生成数据。
视图可以包含一个或多个表的列，并且可以通过对这些表执行复杂的查询来定义。

视图提供了以下几个主要功能：

简化复杂查询： 视图可以将复杂的查询逻辑封装起来，使得用户可以使用简单的 SQL 查询语句来获取数据，而不必关心背后的复杂性。

安全性控制： 视图可以限制用户访问数据的范围，只暴露必要的数据给用户。
通过视图，可以隐藏表中的某些列或者行，从而保护敏感数据的安全性。

数据独立性： 视图提供了一个逻辑数据模型，使得应用程序可以与视图交互，而不必关心数据的实际存储方式或者结构的变化。
如果底层表的结构发生变化，只需要更新视图的定义，而不需要修改应用程序。

重用性： 视图可以被多个用户和应用程序共享，从而实现数据的重用。这样可以避免重复编写相同的查询逻辑。

创建视图的语法通常如下：


CREATE VIEW view_name AS
SELECT column1, column2, ...
FROM table_name
WHERE condition;

*/

-- 创建一个视图 平均成绩视图
CREATE VIEW average_score AS
SELECT course_name, AVG(score) AS average_score FROM course c, score s
WHERE c.course_id=s.course_id
GROUP BY course_name
ORDER BY average_score DESC;

-- 使用视图和使用 普通表一样， 但注意他是虚拟表， 其实只储存了 SQL. 那么他能修改数据吗？
/*
在关系型数据库中，视图确实是基于查询语句的虚拟表，它不直接存储数据，而是在需要时动态执行相应的 SQL 查询来获取数据。
由于视图本身并不存储数据，因此在一般情况下，你不需要对视图进行数据更新。
然而，在某些情况下，可以通过视图进行数据更新。这取决于视图的定义以及底层表的约束。
具体来说，只有满足以下条件的视图才能进行数据更新：

可更新的视图（Updatable Views）： 视图必须满足一定的条件才能被视为可更新的。通常，可更新的视图必须满足以下条件之一：

仅由单个表派生而来，并且包含不超过一个聚合函数。
包含所有被引用列的唯一值，并且所有这些列都是非空且可更新的。
底层表的约束： 视图所基于的底层表必须允许进行相应的数据操作。例如，如果视图中包含了唯一性约束、外键约束或其他约束，则更新操作可能会受到约束的影响。

对于可更新的视图，可以通过执行插入、更新和删除操作来更改视图中的数据。
*****当对视图执行数据更新操作时，实际上是在修改底层表中的数据，*******
视图只是提供了一种便捷的方式来访问和操作底层表的数据。

总的来说，对于大多数情况下的普通视图，你不需要进行数据更新，因为它们通常不满足可更新视图的条件。
但是，如果你创建了可更新的视图，并且底层表允许相应的数据操作，那么对视图进行数据更新操作会影响底层表的数据。

*/

SELECT * FROM average_score;